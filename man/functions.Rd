% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/RJuliaConnect.R
\name{functions}
\alias{functions}
\alias{juliaAddToPath}
\alias{juliaClassDef}
\alias{juliaGet}
\alias{juliaImport}
\alias{juliaSend}
\alias{juliaSource}
\title{Function Versions of Methods for Julia Interface evaluators.}
\usage{
juliaImport(..., evaluator = RJulia())

juliaSource(..., evaluator = RJulia())

juliaAddToPath(..., evaluator = RJulia())

juliaSend(object, evaluator = XR::getInterface(.JuliaInterfaceClass))

juliaGet(object, evaluator = XR::getInterface(.JuliaInterfaceClass))

juliaClassDef(Class, module = "", ..., .ev = RJulia())
}
\arguments{
\item{...}{arguments to the corresponding method for an evaluator object.}

\item{evaluator}{The evaluator object to use.  By default, and usually, the current evaluator
is used, and one is started if none has been.}
}
\description{
Function Versions of Methods for Julia Interface evaluators.
}
\section{Functions}{
\itemize{
\item \code{juliaImport}: import the modules or objects

\item \code{juliaSource}: evaluate the file of Julia source.

\item \code{juliaAddToPath}: add the directory to the path for finding Julia functions and types

\item \code{juliaSend}: sends the \code{object} to Julia, converting it via methods for
\code{\link[XR]{asServerObject}} and returns a proxy for the converted object.

\item \code{juliaGet}: converts the proxy object that is its argument to an \R{} object.

\item \code{juliaClassDef}: Returns the Julia definitionof the specified class, optionally from the module.
}}

